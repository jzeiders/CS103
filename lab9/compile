#!/usr/bin/python
#-*- mode: python -*-

"""
Usage:
 compile foo       # runs clang++ <options> foo.cpp -o foo
 compile foo.cpp   # same as previous
 compile foo.cpp bar.cpp baz.o -o bar # clang++ <options> <args>

For installation instructions, see
http://bits.usc.edu/cs103/compile/

Contact: dpritcha@usc.edu
"""

def compile_convert(args, warn = True):
    if len(args) == 1:
        arg = args[0]
        if arg.endswith(".cpp"):
            arg = arg[:-4]
        args = [arg+".cpp", "-o", arg]

    prefix = ["clang++", "-g"]
    if warn:
        prefix += ["-Wall", "-Wvla", "-Wshadow", "-Wunreachable-code",
                   "-Wconversion",
                   "-Wno-shorten-64-to-32", "-Wno-sign-conversion",
                   "-Wno-sign-compare", "-Wno-write-strings"]
# this was going to be added Fall 2015 but is probably too experimental
#                   "-fsanitize=undefined"
# it's worth considering -fsanitize=address or -fsanitize=memory too
# except that they are not compatible with valgrind :(
    return prefix + args

if __name__ == "__main__":
    import os, sys
    if len(sys.argv) <= 1:
        print("Error in 'compile': no arguments given")
    else:
        os.system(" ".join(compile_convert(sys.argv[1:])))
